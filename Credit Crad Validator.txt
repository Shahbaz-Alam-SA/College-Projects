#include <iostream>
#include <string>

using namespace std;

// Function to check if a given string consists only of numeric digits
bool isNumberString(const string& s) {
    int len = s.length();
    for (int i = 0; i < len; i++) {
        if (s[i] < '0' || s[i] > '9')
            return false;
    }
    return true;
}

int main() {
    string ccNumber;

    cout << "This program uses the Luhn Algorithm to validate a credit card number." << endl;
    cout << "You can enter 'exit' anytime to quit." << endl;

    while (true) {
        cout << "Please enter a credit card number to validate: ";
        cin >> ccNumber;

        if (ccNumber == "exit")
            break;

        if (!isNumberString(ccNumber)) {
            cout << "Invalid input! Please enter a valid credit card number." << endl;
            continue;
        }

        int len = ccNumber.length();
        int doubleEvenSum = 0;

        // Step 1: Double every second digit, starting from the right
        for (int i = len - 2; i >= 0; i = i - 2) {
            int doubledDigit = ((ccNumber[i] - '0') * 2);
            if (doubledDigit > 9) {
                doubledDigit = (doubledDigit / 10) + (doubledDigit % 10);
            }
            doubleEvenSum += doubledDigit;
        }

        // Step 2: Add every odd-placed digit from the right to doubleEvenSum
        for (int i = len - 1; i >= 0; i = i - 2) {
            doubleEvenSum += (ccNumber[i] - '0');
        }

        // Step 3: Check if the final doubleEvenSum is divisible by 10
        cout << (doubleEvenSum % 10 == 0 ? "Valid!" : "Invalid!") << endl;
    }

    return 0;
}
